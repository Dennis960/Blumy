name: Build Firmware and Upload .bin files to Blumy

on:
  push:
    branches:
      - main
    paths:
      - "Firmware/**"
      - ".github/workflows/deploy.firmware.workflow.yml"
  pull_request:
    branches:
      - main
    paths:
      - "Firmware/**"
      - ".github/workflows/deploy.firmware.workflow.yml"

jobs:
  test-firmware:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Firmware Tests
        run: |
          docker run --rm -v $PWD:/project -w /project/Firmware -u $UID -e HOME=/tmp -e IDF_COMPONENT_MANAGER=0 espressif/idf:v5.4.1 /bin/bash -c "cp CMakeLists_test.txt CMakeLists.txt && idf.py build"

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-firmware
          path: Firmware/build/firmware_tests.bin

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm ci
        working-directory: Firmware/frontend

      - name: Build Frontend
        run: npm run build
        working-directory: Firmware/frontend

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: Firmware/main/index_html.c

  build-firmware:
    runs-on: ubuntu-latest
    needs: [test-firmware, build-frontend]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: Firmware/main

      - name: Build Firmware
        run: |
          docker run --rm -v $PWD:/project -w /project/Firmware -u $UID -e HOME=/tmp -e FIRMWARE_VERSION=${{ github.run_number }} espressif/idf:v5.4.1 idf.py build

      - name: Rename Firmware to firmware
        run: mv Firmware/build/Firmware.bin Firmware/build/firmware.bin

      - name: Create a copy of the firmware with run number
        run: cp Firmware/build/firmware.bin Firmware/build/firmware-${{ github.run_number }}.bin

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: Firmware/build/firmware*.bin

  deploy-firmware:
    runs-on: ubuntu-latest
    needs: build-firmware
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Firmware Artifact
        uses: actions/download-artifact@v4
        with:
          name: firmware
          path: firmware

      - name: Upload Firmware Artifact
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.BLUMY_KEY }}
          ARGS: "-rlgoDztvc -i"
          SOURCE: "firmware"
          REMOTE_HOST: ${{ secrets.BLUMY_HOST }}
          REMOTE_USER: ${{ secrets.BLUMY_USER }}
          TARGET: ${{ secrets.BLUMY_FIRMWARE_PATH }}
