name: Deploy ESPlant-Server
on:
  push:
    branches:
      - main
    paths:
      - "api/**"
      - "ESPlant-Server/**"
  pull_request:
    branches:
      - main
    paths:
      - "api/**"
      - "ESPlant-Server/**"
env:
  # TODO: extract this to github SECRET
  HOST_PATH: /var/www/hoppingadventure/hopping/esplant/api
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install api dependencies
        working-directory: ./ESPlant-Server/api
        run: npm install
      - name: Build api
        working-directory: ./ESPlant-Server/api
        run: npm run build
      - name: Install dashboard dependencies
        working-directory: ./ESPlant-Server/dashboard
        run: npm install
      - name: Build dashboard
        working-directory: ./ESPlant-Server/dashboard
        run: npm run build
      - name: Copy api/dashboard into api/dist
        run: cp -r ./ESPlant-Server/api/dashboard ./ESPlant-Server/api/dist
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ESPlant-Server
          path: ./ESPlant-Server/api/dist
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ESPlant-Server
          path: ESPlant-Server
      - name: Deploy to server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.HOPPING_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "ESPlant-Server/"
          REMOTE_HOST: "hoppingadventure.com"
          REMOTE_USER: "hopping"
          TARGET: ${{ env.HOST_PATH }}
          SCRIPT_BEFORE: |
            echo "Nothing to do before deploy"
          SCRIPT_AFTER: |
            echo "Install dependencies for api"
            cd ${{ env.HOST_PATH }}/api
            npm install
            echo "Restarting esplant-service"
            sudo systemctl restart esplant.service
            echo "Create data directory if not exists"
            mkdir -p ${{ env.HOST_PATH }}/data

